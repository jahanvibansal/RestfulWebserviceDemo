Accept the Locale from Headers e.g 

   @RequestHeader("Accept-Language") Locale locale

Step 1 : Define Beans for Internationalization
Add the files in resources/i18n folder as shown in image


Add the following to the Application class ( The main class)


//since no session in restful. By0default: AcceptHeaderLocaleResolver
/* @Bean
 public LocaleResolver localeResolver() {
  AcceptHeaderLocaleResolver slr = new AcceptHeaderLocaleResolver();
  slr.setDefaultLocale(Locale.US); // Set default Locale as US
  return slr;
 } */

 /*@Bean
 public ResourceBundleMessageSource messageSource() {
  ResourceBundleMessageSource source = new ResourceBundleMessageSource();
  source.setBasenames("i18n/messages");  // name of the resource bundle 
  source.setUseCodeAsDefaultMessage(true);
  return source;
 }*/
Instead, 

In application.properties:
spring.messages.basename=messages


Now inject the MessageSource Bean where you want to internationalize the message. We will be doing it in the Controller.
Note : You need to define all your resouce bundles in the messageSource bean so that the application can pick them.



    @RestController
    public class HomeController {

       @Autowired 
       private MessageSource messageSource;

     @GetMapping("data1")
	public String data(@RequestHeader(name="Accept-Language", defaultValue="en") Locale locale) {
		return source.getMessage("message", null, locale);
	}
	

	@GetMapping("data2")
	public String data2( Locale locale) {
		return source.getMessage("message", null, locale);
	}
	
	
	
	@GetMapping("data3")
	public String data3() {
		return source.getMessage("message", null, LocaleContextHolder.getLocale());
	}
    }
